components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: test@test.com
        name: Test D.
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    ContactPerson:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: array
          items:
            type: string
          example: ["1234567890", "9876543210"]
        emailAddress:
          type: array
          items:
            type: string
          example: ["test@example.com", "another@test.com"]
        location:
          type: string
        skills:
          $ref: "#/components/schemas/Skill"
      example:
        firstName: John
        lastName: Doe
        phoneNumber: ["1234567890"]
        emailAddress: ["john.doe@example.com"]
        location: New York

    Job:
      type: object
      properties:
        jobTitle:
          type: string
          description: Job title
        jobDescription:
          type: string
          description: Job description
        employmentType:
          type: string
          description: Employment type
        location:
          type: string
          description: Job location
        qualification:
          type: string
          description: Qualification required
        skills:
          type: string
          description: Required skills
        responsibilities:
          type: string
          description: Job responsibilities
        education:
          type: string
          description: Required education
        experience:
          type: string
          description: Required experience
        benefits:
          type: string
          description: Job benefits
        overview:
          type: string
          description: Job overview
        hiringProcess:
          type: string
          description: Hiring process details
        additionalText:
          type: string
          description: Additional information about the job
        createdAt:
          type: date
          description: Date when the job was created
        updatedAt:
          type: date
          description: Date when the job was last updated
      required:
        - jobTitle
        - jobDescription
        - employmentType
        - location
        - qualification
        - skills
        - responsibilities
        - education
        - experience
        - benefits
        - overview
        - hiringProcess
        - additionalText

    Skill:
      type: object
      properties:
        name:
          type: string
      example:
        name: JavaScript

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
